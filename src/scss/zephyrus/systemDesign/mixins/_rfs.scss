$rfs-base-value: 1.25rem !default;
$rfs-unit: rem !default;
$rfs-rem-value: 16 !default;
$enable-rfs: true !default;
$rfs-factor: 10 !default;

@function rfs-value($values) {
	$values: if(type-of($values) != list, ($values), $values);
	$val: '';
	@each $value in $values {
		@if $value == 0 {
			$val: $val + ' 0';
		} @else {
			$unit: if(type-of($value) == 'number', unit($value), false);

			@if $unit == px {
				$val: $val +
					' ' +
					if($rfs-unit == rem, #{divide($value, $value * 0 + $rfs-rem-value)}rem, $value);
			} @else if $unit == rem {
				$val: $val +
					' ' +
					if($rfs-unit == px, #{divide($value, $value * 0 + 1) * $rfs-rem-value}px, $value);
			} @else {
				$val: $val + ' ' + $value;
			}
		}
	}

	@return unquote(str-slice($val, 2));
}

@function rfs-fluid-value($values) {
	$values: if(type-of($values) != list, ($values), $values);

	$val: '';

	@each $value in $values {
		@if $value == 0 {
			$val: $val + ' 0';
		} @else {
			$unit: if(type-of($value) == 'number', unit($value), false);

			@if not $unit or $unit != px and $unit != rem {
				$val: $val + ' ' + $value;
			} @else {
				$value: divide($value, $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value)));

				@if abs($value) <= $rfs-base-value or not $enable-rfs {
					$val: $val +
						' ' +
						if($rfs-unit == rem, #{divide($value, $rfs-rem-value)}rem, #{$value}px);
				} @else {
					$value-min: $rfs-base-value + divide(abs($value) - $rfs-base-value, $rfs-factor);

					$value-diff: abs($value) - $value-min;

					$min-width: if(
						$rfs-unit == rem,
						#{divide($value-min, $rfs-rem-value)}rem,
						#{$value-min}px
					);

					$min-width: if($value < 0, -$min-width, $min-width);

					$variable-unit: if($rfs-two-dimensional, vmin, vw);

					$variable-width: #{divide($value-diff * 100, $rfs-breakpoint)}#{$variable-unit};

					$val: $val +
						' calc(' +
						$min-width +
						if($value < 0, ' - ', ' + ') +
						$variable-width +
						')';
				}
			}
		}
	}

	@return unquote(str-slice($val, 2));
}

@mixin rfs($values, $property: font-size) {
	@if $values != null {
		$val: rfs-value($values);
		$fluid-val: rfs-fluid-value($values);

		@if $val == $fluid-val {
			#{$property}: $val;
		} @else {
			@include _rfs-rule() {
				#{$property}: if($rfs-mode == max-media-query, $val, $fluid-val);

				min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);
			}

			@include _rfs-media-query-rule() {
				#{$property}: if($rfs-mode == max-media-query, $fluid-val, $val);
			}
		}
	}
}

//HELPERS

@mixin font-size($value) {
	@include rfs($value);
}
